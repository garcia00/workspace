package br.com.j.hemopa.digital.service;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.criteria.CriteriaQuery;

import br.com.j.hemopa.digital.model.Evento;
import br.com.j.hemopa.digital.util.JPAUtil;

public class EventoDAO {
	
	public void EvntoDAO(Evento evento) {
		
		// consegue a entity manager
		EntityManager em = new JPAUtil().getEntityManager();

		// abre transacao
		em.getTransaction().begin();

		// persiste o objeto
		em.persist(evento);

		// commita a transacao
		em.getTransaction().commit();

		// fecha a entity manager
		em.close();
	}
	}

	public void adiciona(Evento evento) {

		// consegue a entity manager
		EntityManager em = new JPAUtil().getEntityManager();

		// abre transacao
		em.getTransaction().begin();

		// persiste o objeto
		em.persist(t);

		// commita a transacao
		em.getTransaction().commit();

		// fecha a entity manager
		em.close();
	}

	public void remove(Evento evento) {
		EntityManager em = new JPAUtil().getEntityManager();
		em.getTransaction().begin();

		em.remove(em.merge(t));

		em.getTransaction().commit();
		em.close();
	}

	public void atualiza(Evento evento) {
		EntityManager em = new JPAUtil().getEntityManager();
		em.getTransaction().begin();

		em.merge(t);

		em.getTransaction().commit();
		em.close();
	}

	public  List<Evento> listaTodos() {
		EntityManager em = new JPAUtil().getEntityManager();
		CriteriaQuery<Evento> query = em.getCriteriaBuilder().createQuery(Evento.class);
		query.select(query.from(Evento.class));

		List<Evento> lista = em.createQuery(query).getResultList();

		em.close();
		return lista;
	}

	public Evento buscaPorId(Integer id) {
		EntityManager em = new JPAUtil().getEntityManager();
		Evento instancia = em.find(Evento.class, id);
		em.close();
		return instancia;
	}

	public int contaTodos() {
		EntityManager em = new JPAUtil().getEntityManager();
		long result = (Long) em.createQuery(" select count(n) from pessoa n ")
				.getSingleResult();
		em.close();

		return (int) result;
	}

	public List<Evento> listaTodosPaginada(int firstResult, int maxResults) {
		EntityManager em = new JPAUtil().getEntityManager();
		CriteriaQuery<Evento> query = em.getCriteriaBuilder().createQuery(Evento.class);
		query.select(query.from(Evento.class));

		List<Evento> lista = em.createQuery(query).setFirstResult(firstResult)
				.setMaxResults(maxResults).getResultList();

		em.close();
		return lista;
	}

}
